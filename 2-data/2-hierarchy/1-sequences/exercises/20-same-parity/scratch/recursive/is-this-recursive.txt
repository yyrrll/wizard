;; Is this really a recursive procedure?

;;  of-parity calls itself, but is it passing in state variables?

;;      I think not.  

;;          It doesn't carry an accumulated return value from call to call.
;;          -- the reduction step (eg, the << if >> clause checking parity ?) builds its list list with recursive calls on of-parity
;;          -- for any given element, the list of matches is:
;;              if matched, the pair of that item and the list of matches from the remaining items
;;              if not matched, the list of matches from the remaining items


note that the inner function of-parity _does_ have a state variable -- parity, which communicates the parity to match
- is this a problem for a truly recursive algorithm?
- argument is not necessary within block scope, as the variable can be set and be available to the inner procedure
