Exercise 2.33

Fill in the missing expressions to complete the following definitions of some
basic list-manipulation operations as accumulations:

(define (map p sequence)
  (accumulate (lambda (x y) <??>) nil sequence))
(define (append seq1 seq2)
  (accumulate cons <??> <??>))
(define (length sequence)
  (accumulate <??> 0 sequence))


SOLUTION


(define (map-accumulate p sequence)
    (accumulate (lambda (x y) (cons (p x) y)) nil sequence))


(define (append-accumulate list1 list2)
  (accumulate cons      ; op
              list2     ; initial
              list1)    ; sequence
  )


(define (length-accumulate sequence)
  (accumulate (lambda (x y) (+ 1 y)) 0 sequence))
